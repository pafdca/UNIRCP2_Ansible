# Namespace
apiVersion: v1
kind: Namespace
metadata: {
   name: "jenkins"
   }

---
# PV
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-pv
  namespace: jenkins
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /srv/nfs
    server: 192.168.1.115

---
# PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: jenkins
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - name: jenkins
        image: jenkins/jenkins:latest
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: jenkins-persistent-storage
          mountPath: /var/jenkins_home
      volumes:
      - name: jenkins-persistent-storage
        persistentVolumeClaim:
          claimName: jenkins-pvc

---
# Service
apiVersion: v1
kind: Service
metadata:
    name: jenkins
    namespace: jenkins
spec:
    type: ClusterIP
    selector:
      app: jenkins
    ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins
spec:
  rules:
  - host: jenkins
    http:
      paths:
      - path: /
        pathType: "Prefix"
        backend:
          service:
            name: jenkins
            port:
              number: 8080

